/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/@rdfjs/dataset@2.0.1/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function t(t){return"string"==typeof t||t instanceof String}function e(t){if("string"==typeof t)return t;if(!t)return"";if(void 0!==t.id&&"Quad"!==t.termType)return t.id;let s,n,i,c;switch(t.termType){case"NamedNode":return t.value;case"BlankNode":return`_:${t.value}`;case"Variable":return`?${t.value}`;case"DefaultGraph":return"";case"Literal":return t.language?`"${t.value}"@${t.language}`:`"${t.value}"${t.datatype&&"http://www.w3.org/2001/XMLSchema#string"!==t.datatype.value?`^^${t.datatype.value}`:""}`;case"Quad":return s=r(e(t.subject)),n=r(e(t.predicate)),i=r(e(t.object)),c="DefaultGraph"===t.graph.termType?"":` ${e(t.graph)}`,`<<${s} ${n} ${i}${c}>>`;default:throw new Error(`Unexpected termType: ${t.termType}`)}}const s=/^"(.*".*)(?="[^"]*$)/;function r(t){return t.replace(s,((t,e)=>`"${e.replace(/"/g,'""')}`))}class n{constructor(t){if(this._size=0,this._graphs=Object.create(null),this._id=0,this._ids=Object.create(null),this._ids["><"]=0,this._entities=Object.create(null),this._quads=new Map,t)for(const e of t)this.add(e)}get size(){let t=this._size;if(null!==t)return t;t=0;const e=this._graphs;let s,r;for(const n in e)for(const i in s=e[n].subjects)for(const e in r=s[i])t+=Object.keys(r[e]).length;return this._size=t,this._size}add(t){let s=e(t.subject),r=e(t.predicate),n=e(t.object);const i=e(t.graph);let c=this._graphs[i];c||(c=this._graphs[i]={subjects:{},predicates:{},objects:{}},Object.freeze(c));const a=this._ids,u=this._entities;return s=a[s]||(a[u[++this._id]=s]=this._id),r=a[r]||(a[u[++this._id]=r]=this._id),n=a[n]||(a[u[++this._id]=n]=this._id),this._addToIndex(c.subjects,s,r,n),this._addToIndex(c.predicates,r,n,s),this._addToIndex(c.objects,n,s,r),this._setQuad(s,r,n,i,t),this._size=null,this}delete(t){let s=e(t.subject),r=e(t.predicate),n=e(t.object);const i=e(t.graph),c=this._ids,a=this._graphs;let u,d,o;if(!((s=c[s])&&(r=c[r])&&(n=c[n])&&(u=a[i])&&(d=u.subjects[s])&&(o=d[r])&&n in o))return this;for(s in this._removeFromIndex(u.subjects,s,r,n),this._removeFromIndex(u.predicates,r,n,s),this._removeFromIndex(u.objects,n,s,r),null!==this._size&&this._size--,this._deleteQuad(s,r,n,i),u.subjects)return this;return delete a[i],this}has(s){const r=e(s.subject),n=e(s.predicate),i=e(s.object),c=e(s.graph),a=this._graphs[c];if(!a)return!1;const u=this._ids;let d,o,h;return!(t(r)&&!(d=u[r])||t(n)&&!(o=u[n])||t(i)&&!(h=u[i]))&&1===this._countInIndex(a.objects,h,d,o)}match(t,e,s,r){return this._createDataset(this._match(t,e,s,r))}[Symbol.iterator](){return this._match()[Symbol.iterator]()}_addToIndex(t,e,s,r){const n=t[e]||(t[e]={}),i=n[s]||(n[s]={}),c=r in i;return c||(i[r]=null),!c}_removeFromIndex(t,e,s,r){const n=t[e],i=n[s];delete i[r];for(const t in i)return;delete n[s];for(const t in n)return;delete t[e]}_findInIndex(t,e,s,r,n,i,c,a,u,d){let o,h,l;e&&((o=t,t={})[e]=o[e]);for(const e in t)if(h=t[e],h){s&&((o=h,h={})[s]=o[s]);for(const t in h)if(l=h[t],l){const s=r?r in l?[r]:[]:Object.keys(l);for(let r=0;r<s.length;r++){const o={[n]:e,[i]:t,[c]:s[r]},h=this._getQuad(o.subject,o.predicate,o.object,a);if(d)d.push(h);else if(u(h))return!0}}}return d}_countInIndex(t,e,s,r){let n,i,c,a=0;e&&((n=t,t={})[e]=n[e]);for(const e in t)if(i=t[e],i){s&&((n=i,i={})[s]=n[s]);for(const t in i)c=i[t],c&&(r?r in c&&a++:a+=Object.keys(c).length)}return a}_getGraphs(e){return t(e)?{[e]:this._graphs[e]}:this._graphs}_match(s,r,n,i){s=s&&e(s),r=r&&e(r),n=n&&e(n),i=i&&e(i);const c=[],a=this._getGraphs(i),u=this._ids;let d,o,h,l;if(t(s)&&!(o=u[s])||t(r)&&!(h=u[r])||t(n)&&!(l=u[n]))return c;for(const t in a)d=a[t],d&&(o?l?this._findInIndex(d.objects,l,o,h,"object","subject","predicate",t,null,c):this._findInIndex(d.subjects,o,h,null,"subject","predicate","object",t,null,c):h?this._findInIndex(d.predicates,h,l,null,"predicate","object","subject",t,null,c):l?this._findInIndex(d.objects,l,null,null,"object","subject","predicate",t,null,c):this._findInIndex(d.subjects,null,null,null,"subject","predicate","object",t,null,c));return c}_getQuad(t,e,s,r){return this._quads.get(this._toId(t,e,s,r))}_setQuad(t,e,s,r,n){this._quads.set(this._toId(t,e,s,r),n)}_deleteQuad(t,e,s,r){this._quads.delete(this._toId(t,e,s,r))}_createDataset(t){return new this.constructor(t)}_toId(t,e,s,r){return`${t}:${e}:${s}:${r}`}}class i{dataset(t){return new n(t)}}i.exports=["dataset"];const c=new i;export{c as default};
//# sourceMappingURL=/sm/4db0cb046d724e46891808f8aaee8182a437184fda8a932a121a79727be86968.map

